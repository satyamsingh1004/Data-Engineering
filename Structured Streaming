 the system ensures end-to-end exactly-once fault-tolerance guarantees through checkpointing and Write-Ahead Logs. 
 
 Internally, by default, Structured Streaming queries are processed using a micro-batch processing engine, which processes data streams as a series of small batch jobs 
 thereby achieving end-to-end latencies as low as 100 milliseconds and exactly-once fault-tolerance guarantees. However, since Spark 2.3, we have introduced a new 
 low-latency processing mode called Continuous Processing, which can achieve end-to-end latencies as low as 1 millisecond with at-least-once guarantees. 
 
 Event-time is the time embedded in the data itself. ( you probably want to use the time when the data was generated (that is, event-time in the data), rather than the
 time Spark receives them.)
 
 watermarking allows the user to specify the threshold of late data, and allows the engine to accordingly clean up old state
 
 Delivering end-to-end exactly-once semantics was one of key goals behind the design of Structured Streaming.
 Together, using replayable sources,  checkpointing and write-ahead logs to record the offset range of the data being processed in each trigger and idempotent sinks, 
 Structured Streaming can ensure end-to-end exactly-once semantics under any failure.
 
Structured Streaming can maintain the intermediate state for partial aggregates for a long period of time such that late data can update aggregates of old windows correctly,

However, to run this query for days, itâ€™s necessary for the system to bound the amount of intermediate in-memory state it accumulates. 
This means the system needs to know when an old aggregate can be dropped from the in-memory state because the application is not going to receive late data for that 
aggregate any more. To enable this, in Spark 2.1, we have introduced watermarking

For a specific window ending at time T, the engine will maintain state and allow late data to update the state until (max event time seen by the engine - late threshold > T).

Spark supports three types of time windows: tumbling (fixed), sliding and session.
 
 
